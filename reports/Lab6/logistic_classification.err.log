Traceback (most recent call last):
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd

# Define a function to check if a recession occurs within 12 months ahead
def recession_in_next_12_months(row, data):
    current_date = row['Date']
    end_date = current_date + pd.DateOffset(months=12)
    
    # Filter data for the next 12 months
    next_12_months = data[(data['Date'] > current_date) & (data['Date'] <= end_date)]
    
    # Check if any of those months had a recession
    if next_12_months['NBER_Rec'].sum() > 0:
        return 1
    else:
        return 0

# Create a new column 'Recession_in_12_Months' using the defined function
data_all['NBER_Rec12'] = data_all.apply(lambda row: recession_in_next_12_months(row, data), axis=1)

------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[3], line 18[0m
[0;32m     15[0m         [38;5;28;01mreturn[39;00m [38;5;241m0[39m
[0;32m     17[0m [38;5;66;03m# Create a new column 'Recession_in_12_Months' using the defined function[39;00m
[1;32m---> 18[0m data_all[[38;5;124m'[39m[38;5;124mNBER_Rec12[39m[38;5;124m'[39m] [38;5;241m=[39m data_all[38;5;241m.[39mapply([38;5;28;01mlambda[39;00m row: recession_in_next_12_months(row, data), axis[38;5;241m=[39m[38;5;241m1[39m)

File [1;32m~\anaconda3\Lib\site-packages\pandas\core\frame.py:9423[0m, in [0;36mDataFrame.apply[1;34m(self, func, axis, raw, result_type, args, **kwargs)[0m
[0;32m   9412[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpandas[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcore[39;00m[38;5;21;01m.[39;00m[38;5;21;01mapply[39;00m [38;5;28;01mimport[39;00m frame_apply
[0;32m   9414[0m op [38;5;241m=[39m frame_apply(
[0;32m   9415[0m     [38;5;28mself[39m,
[0;32m   9416[0m     func[38;5;241m=[39mfunc,
[1;32m   (...)[0m
[0;32m   9421[0m     kwargs[38;5;241m=[39mkwargs,
[0;32m   9422[0m )
[1;32m-> 9423[0m [38;5;28;01mreturn[39;00m op[38;5;241m.[39mapply()[38;5;241m.[39m__finalize__([38;5;28mself[39m, method[38;5;241m=[39m[38;5;124m"[39m[38;5;124mapply[39m[38;5;124m"[39m)

File [1;32m~\anaconda3\Lib\site-packages\pandas\core\apply.py:678[0m, in [0;36mFrameApply.apply[1;34m(self)[0m
[0;32m    675[0m [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mraw:
[0;32m    676[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mapply_raw()
[1;32m--> 678[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mapply_standard()

File [1;32m~\anaconda3\Lib\site-packages\pandas\core\apply.py:798[0m, in [0;36mFrameApply.apply_standard[1;34m(self)[0m
[0;32m    797[0m [38;5;28;01mdef[39;00m [38;5;21mapply_standard[39m([38;5;28mself[39m):
[1;32m--> 798[0m     results, res_index [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mapply_series_generator()
[0;32m    800[0m     [38;5;66;03m# wrap results[39;00m
[0;32m    801[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mwrap_results(results, res_index)

File [1;32m~\anaconda3\Lib\site-packages\pandas\core\apply.py:814[0m, in [0;36mFrameApply.apply_series_generator[1;34m(self)[0m
[0;32m    811[0m [38;5;28;01mwith[39;00m option_context([38;5;124m"[39m[38;5;124mmode.chained_assignment[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m):
[0;32m    812[0m     [38;5;28;01mfor[39;00m i, v [38;5;129;01min[39;00m [38;5;28menumerate[39m(series_gen):
[0;32m    813[0m         [38;5;66;03m# ignore SettingWithCopy here in case the user mutates[39;00m
[1;32m--> 814[0m         results[i] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mf(v)
[0;32m    815[0m         [38;5;28;01mif[39;00m [38;5;28misinstance[39m(results[i], ABCSeries):
[0;32m    816[0m             [38;5;66;03m# If we have a view on v, we need to make a copy because[39;00m
[0;32m    817[0m             [38;5;66;03m#  series_generator will swap out the underlying data[39;00m
[0;32m    818[0m             results[i] [38;5;241m=[39m results[i][38;5;241m.[39mcopy(deep[38;5;241m=[39m[38;5;28;01mFalse[39;00m)

Cell [1;32mIn[3], line 18[0m, in [0;36m<lambda>[1;34m(row)[0m
[0;32m     15[0m         [38;5;28;01mreturn[39;00m [38;5;241m0[39m
[0;32m     17[0m [38;5;66;03m# Create a new column 'Recession_in_12_Months' using the defined function[39;00m
[1;32m---> 18[0m data_all[[38;5;124m'[39m[38;5;124mNBER_Rec12[39m[38;5;124m'[39m] [38;5;241m=[39m data_all[38;5;241m.[39mapply([38;5;28;01mlambda[39;00m row: recession_in_next_12_months(row, data), axis[38;5;241m=[39m[38;5;241m1[39m)

[1;31mNameError[0m: name 'data' is not defined
NameError: name 'data' is not defined

