Traceback (most recent call last):
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Miguel\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

colors = ['#165aa7', '#cb495c', '#fec630', '#bb60d5', '#f47915', '#06ab54', '#002070', '#b27d12', '#007030']

# We will import all these here to ensure that they are loaded, but
# will usually re-import close to where they are used to make clear
# where the functions come from
from sklearn import (
    linear_model, metrics, neural_network, pipeline, model_selection
)

url = "https://datascience.quantecon.org/assets/data/kc_house_data.csv"
df = pd.read_csv(url)
df.info()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mConnectionResetError[0m                      Traceback (most recent call last)
File [1;32m~\anaconda3\Lib\urllib\request.py:1348[0m, in [0;36mAbstractHTTPHandler.do_open[1;34m(self, http_class, req, **http_conn_args)[0m
[0;32m   1347[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1348[0m     h[38;5;241m.[39mrequest(req[38;5;241m.[39mget_method(), req[38;5;241m.[39mselector, req[38;5;241m.[39mdata, headers,
[0;32m   1349[0m               encode_chunked[38;5;241m=[39mreq[38;5;241m.[39mhas_header([38;5;124m'[39m[38;5;124mTransfer-encoding[39m[38;5;124m'[39m))
[0;32m   1350[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m

File [1;32m~\anaconda3\Lib\http\client.py:1286[0m, in [0;36mHTTPConnection.request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1285[0m [38;5;250m[39m[38;5;124;03m"""Send a complete request to the server."""[39;00m
[1;32m-> 1286[0m [38;5;28mself[39m[38;5;241m.[39m_send_request(method, url, body, headers, encode_chunked)

File [1;32m~\anaconda3\Lib\http\client.py:1332[0m, in [0;36mHTTPConnection._send_request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1331[0m     body [38;5;241m=[39m _encode(body, [38;5;124m'[39m[38;5;124mbody[39m[38;5;124m'[39m)
[1;32m-> 1332[0m [38;5;28mself[39m[38;5;241m.[39mendheaders(body, encode_chunked[38;5;241m=[39mencode_chunked)

File [1;32m~\anaconda3\Lib\http\client.py:1281[0m, in [0;36mHTTPConnection.endheaders[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1280[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[1;32m-> 1281[0m [38;5;28mself[39m[38;5;241m.[39m_send_output(message_body, encode_chunked[38;5;241m=[39mencode_chunked)

File [1;32m~\anaconda3\Lib\http\client.py:1041[0m, in [0;36mHTTPConnection._send_output[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1040[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[1;32m-> 1041[0m [38;5;28mself[39m[38;5;241m.[39msend(msg)
[0;32m   1043[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1044[0m 
[0;32m   1045[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [1;32m~\anaconda3\Lib\http\client.py:979[0m, in [0;36mHTTPConnection.send[1;34m(self, data)[0m
[0;32m    978[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[1;32m--> 979[0m     [38;5;28mself[39m[38;5;241m.[39mconnect()
[0;32m    980[0m [38;5;28;01melse[39;00m:

File [1;32m~\anaconda3\Lib\http\client.py:1458[0m, in [0;36mHTTPSConnection.connect[1;34m(self)[0m
[0;32m   1456[0m     server_hostname [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhost
[1;32m-> 1458[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_context[38;5;241m.[39mwrap_socket([38;5;28mself[39m[38;5;241m.[39msock,
[0;32m   1459[0m                                       server_hostname[38;5;241m=[39mserver_hostname)

File [1;32m~\anaconda3\Lib\ssl.py:517[0m, in [0;36mSSLContext.wrap_socket[1;34m(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)[0m
[0;32m    511[0m [38;5;28;01mdef[39;00m [38;5;21mwrap_socket[39m([38;5;28mself[39m, sock, server_side[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    512[0m                 do_handshake_on_connect[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[0;32m    513[0m                 suppress_ragged_eofs[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[0;32m    514[0m                 server_hostname[38;5;241m=[39m[38;5;28;01mNone[39;00m, session[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[0;32m    515[0m     [38;5;66;03m# SSLSocket class handles server_hostname encoding before it calls[39;00m
[0;32m    516[0m     [38;5;66;03m# ctx._wrap_socket()[39;00m
[1;32m--> 517[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39msslsocket_class[38;5;241m.[39m_create(
[0;32m    518[0m         sock[38;5;241m=[39msock,
[0;32m    519[0m         server_side[38;5;241m=[39mserver_side,
[0;32m    520[0m         do_handshake_on_connect[38;5;241m=[39mdo_handshake_on_connect,
[0;32m    521[0m         suppress_ragged_eofs[38;5;241m=[39msuppress_ragged_eofs,
[0;32m    522[0m         server_hostname[38;5;241m=[39mserver_hostname,
[0;32m    523[0m         context[38;5;241m=[39m[38;5;28mself[39m,
[0;32m    524[0m         session[38;5;241m=[39msession
[0;32m    525[0m     )

File [1;32m~\anaconda3\Lib\ssl.py:1075[0m, in [0;36mSSLSocket._create[1;34m(cls, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, context, session)[0m
[0;32m   1074[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mdo_handshake_on_connect should not be specified for non-blocking sockets[39m[38;5;124m"[39m)
[1;32m-> 1075[0m         [38;5;28mself[39m[38;5;241m.[39mdo_handshake()
[0;32m   1076[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mOSError[39;00m, [38;5;167;01mValueError[39;00m):

File [1;32m~\anaconda3\Lib\ssl.py:1346[0m, in [0;36mSSLSocket.do_handshake[1;34m(self, block)[0m
[0;32m   1345[0m         [38;5;28mself[39m[38;5;241m.[39msettimeout([38;5;28;01mNone[39;00m)
[1;32m-> 1346[0m     [38;5;28mself[39m[38;5;241m.[39m_sslobj[38;5;241m.[39mdo_handshake()
[0;32m   1347[0m [38;5;28;01mfinally[39;00m:

[1;31mConnectionResetError[0m: [WinError 10054] An existing connection was forcibly closed by the remote host

During handling of the above exception, another exception occurred:

[1;31mURLError[0m                                  Traceback (most recent call last)
Cell [1;32mIn[1], line 16[0m
[0;32m     11[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m [38;5;28;01mimport[39;00m (
[0;32m     12[0m     linear_model, metrics, neural_network, pipeline, model_selection
[0;32m     13[0m )
[0;32m     15[0m url [38;5;241m=[39m [38;5;124m"[39m[38;5;124mhttps://datascience.quantecon.org/assets/data/kc_house_data.csv[39m[38;5;124m"[39m
[1;32m---> 16[0m df [38;5;241m=[39m pd[38;5;241m.[39mread_csv(url)
[0;32m     17[0m df[38;5;241m.[39minfo()

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\parsers\readers.py:912[0m, in [0;36mread_csv[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)[0m
[0;32m    899[0m kwds_defaults [38;5;241m=[39m _refine_defaults_read(
[0;32m    900[0m     dialect,
[0;32m    901[0m     delimiter,
[1;32m   (...)[0m
[0;32m    908[0m     dtype_backend[38;5;241m=[39mdtype_backend,
[0;32m    909[0m )
[0;32m    910[0m kwds[38;5;241m.[39mupdate(kwds_defaults)
[1;32m--> 912[0m [38;5;28;01mreturn[39;00m _read(filepath_or_buffer, kwds)

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\parsers\readers.py:577[0m, in [0;36m_read[1;34m(filepath_or_buffer, kwds)[0m
[0;32m    574[0m _validate_names(kwds[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mnames[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m))
[0;32m    576[0m [38;5;66;03m# Create the parser.[39;00m
[1;32m--> 577[0m parser [38;5;241m=[39m TextFileReader(filepath_or_buffer, [38;5;241m*[39m[38;5;241m*[39mkwds)
[0;32m    579[0m [38;5;28;01mif[39;00m chunksize [38;5;129;01mor[39;00m iterator:
[0;32m    580[0m     [38;5;28;01mreturn[39;00m parser

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\parsers\readers.py:1407[0m, in [0;36mTextFileReader.__init__[1;34m(self, f, engine, **kwds)[0m
[0;32m   1404[0m     [38;5;28mself[39m[38;5;241m.[39moptions[[38;5;124m"[39m[38;5;124mhas_index_names[39m[38;5;124m"[39m] [38;5;241m=[39m kwds[[38;5;124m"[39m[38;5;124mhas_index_names[39m[38;5;124m"[39m]
[0;32m   1406[0m [38;5;28mself[39m[38;5;241m.[39mhandles: IOHandles [38;5;241m|[39m [38;5;28;01mNone[39;00m [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m-> 1407[0m [38;5;28mself[39m[38;5;241m.[39m_engine [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_make_engine(f, [38;5;28mself[39m[38;5;241m.[39mengine)

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\parsers\readers.py:1661[0m, in [0;36mTextFileReader._make_engine[1;34m(self, f, engine)[0m
[0;32m   1659[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode:
[0;32m   1660[0m         mode [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m
[1;32m-> 1661[0m [38;5;28mself[39m[38;5;241m.[39mhandles [38;5;241m=[39m get_handle(
[0;32m   1662[0m     f,
[0;32m   1663[0m     mode,
[0;32m   1664[0m     encoding[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39moptions[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mencoding[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m),
[0;32m   1665[0m     compression[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39moptions[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mcompression[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m),
[0;32m   1666[0m     memory_map[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39moptions[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mmemory_map[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m),
[0;32m   1667[0m     is_text[38;5;241m=[39mis_text,
[0;32m   1668[0m     errors[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39moptions[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mencoding_errors[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mstrict[39m[38;5;124m"[39m),
[0;32m   1669[0m     storage_options[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39moptions[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mstorage_options[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m),
[0;32m   1670[0m )
[0;32m   1671[0m [38;5;28;01massert[39;00m [38;5;28mself[39m[38;5;241m.[39mhandles [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[0;32m   1672[0m f [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhandles[38;5;241m.[39mhandle

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\common.py:716[0m, in [0;36mget_handle[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[0;32m    713[0m     codecs[38;5;241m.[39mlookup_error(errors)
[0;32m    715[0m [38;5;66;03m# open URLs[39;00m
[1;32m--> 716[0m ioargs [38;5;241m=[39m _get_filepath_or_buffer(
[0;32m    717[0m     path_or_buf,
[0;32m    718[0m     encoding[38;5;241m=[39mencoding,
[0;32m    719[0m     compression[38;5;241m=[39mcompression,
[0;32m    720[0m     mode[38;5;241m=[39mmode,
[0;32m    721[0m     storage_options[38;5;241m=[39mstorage_options,
[0;32m    722[0m )
[0;32m    724[0m handle [38;5;241m=[39m ioargs[38;5;241m.[39mfilepath_or_buffer
[0;32m    725[0m handles: [38;5;28mlist[39m[BaseBuffer]

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\common.py:368[0m, in [0;36m_get_filepath_or_buffer[1;34m(filepath_or_buffer, encoding, compression, mode, storage_options)[0m
[0;32m    366[0m [38;5;66;03m# assuming storage_options is to be interpreted as headers[39;00m
[0;32m    367[0m req_info [38;5;241m=[39m urllib[38;5;241m.[39mrequest[38;5;241m.[39mRequest(filepath_or_buffer, headers[38;5;241m=[39mstorage_options)
[1;32m--> 368[0m [38;5;28;01mwith[39;00m urlopen(req_info) [38;5;28;01mas[39;00m req:
[0;32m    369[0m     content_encoding [38;5;241m=[39m req[38;5;241m.[39mheaders[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mContent-Encoding[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[0;32m    370[0m     [38;5;28;01mif[39;00m content_encoding [38;5;241m==[39m [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m:
[0;32m    371[0m         [38;5;66;03m# Override compression based on Content-Encoding header[39;00m

File [1;32m~\anaconda3\Lib\site-packages\pandas\io\common.py:270[0m, in [0;36murlopen[1;34m(*args, **kwargs)[0m
[0;32m    264[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[0;32m    265[0m [38;5;124;03mLazy-import wrapper for stdlib urlopen, as that imports a big chunk of[39;00m
[0;32m    266[0m [38;5;124;03mthe stdlib.[39;00m
[0;32m    267[0m [38;5;124;03m"""[39;00m
[0;32m    268[0m [38;5;28;01mimport[39;00m [38;5;21;01murllib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mrequest[39;00m
[1;32m--> 270[0m [38;5;28;01mreturn[39;00m urllib[38;5;241m.[39mrequest[38;5;241m.[39murlopen([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\anaconda3\Lib\urllib\request.py:216[0m, in [0;36murlopen[1;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[0;32m    214[0m [38;5;28;01melse[39;00m:
[0;32m    215[0m     opener [38;5;241m=[39m _opener
[1;32m--> 216[0m [38;5;28;01mreturn[39;00m opener[38;5;241m.[39mopen(url, data, timeout)

File [1;32m~\anaconda3\Lib\urllib\request.py:519[0m, in [0;36mOpenerDirector.open[1;34m(self, fullurl, data, timeout)[0m
[0;32m    516[0m     req [38;5;241m=[39m meth(req)
[0;32m    518[0m sys[38;5;241m.[39maudit([38;5;124m'[39m[38;5;124murllib.Request[39m[38;5;124m'[39m, req[38;5;241m.[39mfull_url, req[38;5;241m.[39mdata, req[38;5;241m.[39mheaders, req[38;5;241m.[39mget_method())
[1;32m--> 519[0m response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_open(req, data)
[0;32m    521[0m [38;5;66;03m# post-process response[39;00m
[0;32m    522[0m meth_name [38;5;241m=[39m protocol[38;5;241m+[39m[38;5;124m"[39m[38;5;124m_response[39m[38;5;124m"[39m

File [1;32m~\anaconda3\Lib\urllib\request.py:536[0m, in [0;36mOpenerDirector._open[1;34m(self, req, data)[0m
[0;32m    533[0m     [38;5;28;01mreturn[39;00m result
[0;32m    535[0m protocol [38;5;241m=[39m req[38;5;241m.[39mtype
[1;32m--> 536[0m result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_call_chain([38;5;28mself[39m[38;5;241m.[39mhandle_open, protocol, protocol [38;5;241m+[39m
[0;32m    537[0m                           [38;5;124m'[39m[38;5;124m_open[39m[38;5;124m'[39m, req)
[0;32m    538[0m [38;5;28;01mif[39;00m result:
[0;32m    539[0m     [38;5;28;01mreturn[39;00m result

File [1;32m~\anaconda3\Lib\urllib\request.py:496[0m, in [0;36mOpenerDirector._call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    494[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[0;32m    495[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[1;32m--> 496[0m     result [38;5;241m=[39m func([38;5;241m*[39margs)
[0;32m    497[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    498[0m         [38;5;28;01mreturn[39;00m result

File [1;32m~\anaconda3\Lib\urllib\request.py:1391[0m, in [0;36mHTTPSHandler.https_open[1;34m(self, req)[0m
[0;32m   1390[0m [38;5;28;01mdef[39;00m [38;5;21mhttps_open[39m([38;5;28mself[39m, req):
[1;32m-> 1391[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mdo_open(http[38;5;241m.[39mclient[38;5;241m.[39mHTTPSConnection, req,
[0;32m   1392[0m         context[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_context, check_hostname[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_check_hostname)

File [1;32m~\anaconda3\Lib\urllib\request.py:1351[0m, in [0;36mAbstractHTTPHandler.do_open[1;34m(self, http_class, req, **http_conn_args)[0m
[0;32m   1348[0m         h[38;5;241m.[39mrequest(req[38;5;241m.[39mget_method(), req[38;5;241m.[39mselector, req[38;5;241m.[39mdata, headers,
[0;32m   1349[0m                   encode_chunked[38;5;241m=[39mreq[38;5;241m.[39mhas_header([38;5;124m'[39m[38;5;124mTransfer-encoding[39m[38;5;124m'[39m))
[0;32m   1350[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m
[1;32m-> 1351[0m         [38;5;28;01mraise[39;00m URLError(err)
[0;32m   1352[0m     r [38;5;241m=[39m h[38;5;241m.[39mgetresponse()
[0;32m   1353[0m [38;5;28;01mexcept[39;00m:

[1;31mURLError[0m: <urlopen error [WinError 10054] An existing connection was forcibly closed by the remote host>
URLError: <urlopen error [WinError 10054] An existing connection was forcibly closed by the remote host>

